//{ Driver Code Starts
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;


// } Driver Code Ends
// User function Template for Java

class Solution {
    void nextPermutation(int[] arr) {
        int n=arr.length;
        int pivot=-1;
        int successor=-1;
        for(int i=n-2;i>-1;i--) {
            if(arr[i]<arr[i+1]) {
                pivot=i;
                break;
            }
        }
        if(pivot==-1) {
            rev(arr,0,n-1);
            return;
        }
            
        for (int i = n - 1; i > pivot; i--) {
            if (arr[i] > arr[pivot]) {
                successor = i;
                break;
    }
}

        swap(arr,pivot,successor);
        
        rev(arr,pivot+1,n-1);
        
    }
        void swap(int[] array,int i,int j) {
                int temp=array[i];
                array[i]=array[j];
                array[j]=temp;
            
        }
        
        void rev(int[] arr,int left,int right) {
            while (left < right) {
                swap(arr, left, right);
                left++;
                right--;
}

        }
    
}

//{ Driver Code Starts.

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine()); // Number of test cases
        while (tc-- > 0) {
            String[] inputLine = br.readLine().split(" ");
            int[] arr = new int[inputLine.length];
            for (int i = 0; i < inputLine.length; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            int N = arr.length;
            Solution ob = new Solution();
            ob.nextPermutation(arr); // Generate the next permutation
            StringBuilder out = new StringBuilder();
            for (int i = 0; i < N; i++) {
                out.append(arr[i] + " "); // Corrected: use arr[i] instead of arr.get(i)
            }
            System.out.println(out.toString().trim()); // Print the output

            System.out.println("~");
        }
    }
}
// } Driver Code Ends
